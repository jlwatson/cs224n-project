

Quote from: RHorning on December 04, 2010, 08:44:11 PM

So really a domain entry would be:  
  
\- the name itself (e.g. example.bitdns)  
\- a hash of the owning public key (e.g. djiusjfkrhffhdehyormavtrr...)  
\- an optional key which could identify a "new" owner in the case of somebody
transferring control of the domain  
\- the IP address(es) of the authoritative DNS server for the name (e.g.
1.2.3.4)  
\- transaction fee paid in BTC  
  
A block entry would also have a timestamp that could be rejected if it was for
some time in the future.  

  
I see, that makes sense. I have an idea about the transaction fee. What if
this were integrated with Bitcoin itself? This would be a different kind of
transaction that would be mixed with regular Bitcoin transactions and included
in regular Bitcoin blocks. Then the block creator would automatically receive
the transaction fee just like all the other tx fees in the block.  
  
If that sounds good, I see a way this could be implemented into the current
Bitcoin system compatibly with current clients. We could use the mysterious
and extravagant "scripting" system to add additional data to regular Bitcoin
transactions. These would look like NOPs to current clients and be ignored,
but BitDNS aware clients would look inside this NOP block and see the extra
DNS data, and interpret it as BitDNS transfers.  
  
Specifically i could imagine using OP_NOP1 to mean BitDNS, then OP_PUSHDATA to
push the DNS info, then OP_DROP to drop it from the stack, followed by the
regular tx opcodes. This will have no effect on regular clients and look like
a regular transaction (can be a dummy tx, 0.01 to yourself) but BitDNS aware
code sees a BitDNS transaction. This is actually a powerful general technique
for adding overlay protocols to Bitcoin.  
  

