I think something like this may be the idea behind "obfuscated computing,"
which Mike Duvos was writing about here a little while back.  The idea is
that you do this trick not just with a graph, but with a boolean circuit
composed of and, or, not gates, etc.  Take your algorithm and express it as
such a circuit, then obfuscate it by drawing in extra gates, connections,
etc.  The resulting circuit has your original circuit embedded in it, but
figuring out what the total circuit does can be computationally intractable.
Someone could build or emulate this circuit and get a result, but they would
not be able to figure out exactly what formula they were computing.

I'm not 100% certain that this technique is used, but Tim's posting reminded
me that I had read something about this several years ago, and this is how
I remember it.