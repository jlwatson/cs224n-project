I don't know this offhand, but I assume it is at least 2^64.


It is not possible for the bank to have a list of the serial numbers on
coins produced, since it doesn't know this information.  Each coin is
created by a user's client software, which chooses the serial number at
random.  When it is sent to the bank to be signed, the serial number is
blinded by being multiplied by a random number, which is divided off
after the client gets it back from the bank.  So the bank never sees a
coin's serial number until it is deposited.


It is easy to make this number so large that it will take longer than the
age of the universe for this to happen.  It just takes a dozen or so
bytes per coin.


Assuming the serial numbers are of the sizes I suggest above, this
chance is so close to zero that your chances of being named King of the
Earth next year (along with the assumption that we switch to a World
Government and it is a monarchy) are much greater.


I don't fully understand what you are getting at, but there are several
false assumptions here.  The "coin" has several parts, one of which is an
RSA signed portion with a number in it, for which I am accepting your
terminology of it being a "serial number".  This terminology is not quite
right, as the coins are not numbered serially (that is, sequentially, 1,
2, 3, etc.), rather the numbers are random.  But it does capture the
essential idea that each coin's number is unique.

You do know the record layout of each coin, but that is because it is
documented and because your client creates coins, not because you could
decrypt it with the bank's public key.  The coin does not have the bank
name field within the RSA signed part.  There is other information
which goes along with the coin, including an identifier for the bank,
outside the RSA signed portion.

For the general question of whether inspection of a lot of RSA-signed
coins would allow you to deduce the private key, the answer is no, as
far as is known.  Actually the attack you can mount is stronger than
this; you can get the bank to RSA sign any number.  You could ask it to
sign "1", for example, and you will get "1" back (so that's not very
useful).  I have tried to think of a way of getting some useful
information from getting it to sign "2", since that is such a simple
number.  But it is raised to a very large power, and as far as I can
see what you will get back is just a random looking number, with all
hints about the exponent gone.

Again, as far as anyone knows, there is no way to break RSA using these
kinds of attacks, at least not any more cheaply than factoring the modulus.