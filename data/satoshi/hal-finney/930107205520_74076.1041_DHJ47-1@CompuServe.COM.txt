It was interesting to see Karl Barrus's efforts to chain the Pax
and Penet remailers.  I think one of his problems is this:

If I reply to one of Karl's double-remailed aliases, I will get assigned
two anonymous aliases - one from each of pax and penet.  The first
machine I send to will assign me an anonymous alias, and forward my
mail on, with a "From:" indicating that same new alias.  The second
machine will then see mail coming in from that new alias, assign me
an alias for that, and send it back to me (via the first machine).

That's why Karl got an extra alias in some of his tests that he wasn't
expecting.  It also means that the fact that he is using a double
remailing alias will be revealed to anyone who chooses to send to him.

I think the lesson is that this process of automatic alias assignment
may not be the best way to handle things.  It sounds attractive and
simple, but look at all the problems Karl ran into.  And if you're using
a chain of remailers for an anonymous address, you really don't want
everyone who sends to you to find out exactly what chain you are using.

I still lean towards the idea of a "constructed" anonymous address,
where I decide ahead of time which remailers I'll use, and in what
order.  Then, I need some way to put that address into the return
field of my mail that I send.  If this were possible, then person A
could post a message, with his headers set so that replies will go
to this anonymous address.  And if person B wanted to send to A, he
could, using A's anonymous address, and B could arrange it so that
B's own anonymous address would go into the outgoing headers.

A and B could then communicate using two completely different paths,
both anonymously.  A could go from pax to penet to B, and B could go
from menudo to rebma to A.  Each user would establish his anonymous
address in the way he preferred.

I think this is probably a better system than all this automatic
assignment of anonymous aliases.  It seems simpler and it should still
be easy to use.  The automatic systems tend to get out of hand.