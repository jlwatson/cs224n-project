

A second version would be a massive development and maintenance hassle for me.
It's hard enough maintaining backward compatibility while upgrading the
network without a second version locking things in. If the second version
screwed up, the user experience would reflect badly on both, although it would
at least reinforce to users the importance of staying with the official
version. If someone was getting ready to fork a second version, I would have
to air a lot of disclaimers about the risks of using a minority version. This
is a design where the majority version wins if there's any disagreement, and
that can be pretty ugly for the minority version and I'd rather not go into
it, and I don't have to as long as there's only one version.  
  
I know, most developers don't like their software forked, but I have real
technical reasons in this case.  
  

That's one of the reasons for transaction fees. There are other things we can
do if necessary.  
  
Since 2007. At some point I became convinced there was a way to do this
without any trust required at all and couldn't resist to keep thinking about
it. Much more of the work was designing than coding.  
  
Fortunately, so far all the issues raised have been things I previously
considered and planned for.

