&gt;I suspect that it looks like some version of TDT / UDT, where TDT corresponds to something like trying to update on "being the kind of agent who outputs this action in this situation" and UDT corresponds to something more mysterious that I haven't been able to find a good explanation of yet, but I haven't thought about this much.

I can try to explain UDT a bit more if you say what you find mysterious about it. Or if you just want to think about it some more, keep in mind that UDT was designed to solve a bunch of [problems](http://lesswrong.com/lw/cs9/list_of_problems_that_motivated_udt/) at the same time, so if you see some feature of it that seems unmotivated, it might be trying to solve a problem that you haven't focused on yet.

Another thing to keep in mind is that UDT is currently formulated mainly for AI rather than human use (whereas you seem to be thinking mostly in human terms). For example it assumes that the agent has full "bit-level" access to its own source code, memories and sensory data, which allows UDT to conceptualize a decision (the thing you're deriving consequences from, or conditioning upon) as a logical fact about the input/output map implemented by a certain piece of code. It avoids human concepts like "being the kind of", "agent", or "situation", which might be hard to fully specify and unambiguously translate to code. The downside is that it's hard for humans (who do not have full introspective access to their own minds and do think in terms of high level concepts) to apply UDT.